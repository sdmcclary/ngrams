public class Html5DatatypeLibrary implements DatatypeLibrary { public Html5DatatypeLibrary ( ) { super ( ) ; } public DatatypeBuilder createDatatypeBuilder ( String baseTypeLocalName ) throws DatatypeException { return new ParameterlessDatatypeBuilder ( createDatatype ( baseTypeLocalName ) ) ; } public Datatype createDatatype ( String typeLocalName ) throws DatatypeException { if ( "ID" . equals ( typeLocalName ) ) { return new Id ( ) ; } else if ( "IDREF" . equals ( typeLocalName ) ) { return Idref . THE_INSTANCE ; } else if ( "IDREFS" . equals ( typeLocalName ) ) { return Idrefs . THE_INSTANCE ; } else if ( "pattern" . equals ( typeLocalName ) ) { return Pattern . THE_INSTANCE ; } else if ( "datetime" . equals ( typeLocalName ) ) { return Datetime . THE_INSTANCE ; } else if ( "datetime-local" . equals ( typeLocalName ) ) { return DatetimeLocal . THE_INSTANCE ; } else if ( "datetime-tz" . equals ( typeLocalName ) ) { return DatetimeTz . THE_INSTANCE ; } else if ( "date-or-time" . equals ( typeLocalName ) ) { return DateOrTime . THE_INSTANCE ; } else if ( "date" . equals ( typeLocalName ) ) { return Date . THE_INSTANCE ; } else if ( "month" . equals ( typeLocalName ) ) { return Month . THE_INSTANCE ; } else if ( "week" . equals ( typeLocalName ) ) { return Week . THE_INSTANCE ; } else if ( "time" . equals ( typeLocalName ) ) { return Time . THE_INSTANCE ; } else if ( "iri" . equals ( typeLocalName ) ) { return Iri . THE_INSTANCE ; } else if ( "iri-ref" . equals ( typeLocalName ) ) { return IriRef . THE_INSTANCE ; } else if ( "string" . equals ( typeLocalName ) ) { return AsciiCaseInsensitiveString . THE_INSTANCE ; } else if ( "language" . equals ( typeLocalName ) ) { return Language . THE_INSTANCE ; } else if ( "media-query" . equals ( typeLocalName ) ) { return MediaQuery . THE_INSTANCE ; } else if ( "mime-type" . equals ( typeLocalName ) ) { return MimeType . THE_INSTANCE ; } else if ( "browsing-context" . equals ( typeLocalName ) ) { return BrowsingContext . THE_INSTANCE ; } else if ( "browsing-context-or-keyword" . equals ( typeLocalName ) ) { return BrowsingContextOrKeyword . THE_INSTANCE ; } else if ( "hash-name" . equals ( typeLocalName ) ) { return HashName . THE_INSTANCE ; } else if ( "integer" . equals ( typeLocalName ) ) { return Int . THE_INSTANCE ; } else if ( "integer-non-negative" . equals ( typeLocalName ) ) { return IntNonNegative . THE_INSTANCE ; } else if ( "integer-positive" . equals ( typeLocalName ) ) { return IntPositive . THE_INSTANCE ; } else if ( "float" . equals ( typeLocalName ) ) { return FloatingPointExponent . THE_INSTANCE ; } else if ( "float-non-negative" . equals ( typeLocalName ) ) { return FloatingPointExponentNonNegative . THE_INSTANCE ; } else if ( "float-positive" . equals ( typeLocalName ) ) { return FloatingPointExponentPositive . THE_INSTANCE ; } else if ( "mime-type-list" . equals ( typeLocalName ) ) { return MimeTypeList . THE_INSTANCE ; } else if ( "circle" . equals ( typeLocalName ) ) { return Circle . THE_INSTANCE ; } else if ( "rectangle" . equals ( typeLocalName ) ) { return Rectangle . THE_INSTANCE ; } else if ( "polyline" . equals ( typeLocalName ) ) { return Polyline . THE_INSTANCE ; } else if ( "xml-name" . equals ( typeLocalName ) ) { return XmlName . THE_INSTANCE ; } else if ( "meta-charset" . equals ( typeLocalName ) ) { return MetaCharset . THE_INSTANCE ; } else if ( "microdata-property" . equals ( typeLocalName ) ) { return MicrodataProperty . THE_INSTANCE ; } else if ( "charset" . equals ( typeLocalName ) ) { return Charset . THE_INSTANCE ; } else if ( "refresh" . equals ( typeLocalName ) ) { return Refresh . THE_INSTANCE ; } else if ( "paren-start" . equals ( typeLocalName ) ) { return ParenthesisStart . THE_INSTANCE ; } else if ( "paren-end" . equals ( typeLocalName ) ) { return ParenthesisEnd . THE_INSTANCE ; } else if ( "email-address" . equals ( typeLocalName ) ) { return EmailAddress . THE_INSTANCE ; } else if ( "email-address-list" . equals ( typeLocalName ) ) { return EmailAddressList . THE_INSTANCE ; } else if ( "keylabellist" . equals ( typeLocalName ) ) { return KeyLabelList . THE_INSTANCE ; } else if ( "zero" . equals ( typeLocalName ) ) { return Zero . THE_INSTANCE ; } else if ( "cdo-cdc-pair" . equals ( typeLocalName ) ) { return CdoCdcPair . THE_INSTANCE ; } else if ( "script" . equals ( typeLocalName ) ) { return Script . THE_INSTANCE ; } else if ( "script-documentation" . equals ( typeLocalName ) ) { return ScriptDocumentation . THE_INSTANCE ; } else if ( "functionbody" . equals ( typeLocalName ) ) { return FunctionBody . THE_INSTANCE ; } else if ( "a-rel" . equals ( typeLocalName ) ) { return ARel . THE_INSTANCE ; } else if ( "link-rel" . equals ( typeLocalName ) ) { return LinkRel . THE_INSTANCE ; } else if ( "meta-name" . equals ( typeLocalName ) ) { return MetaName . THE_INSTANCE ; } else if ( "non-empty-string" . equals ( typeLocalName ) ) { return NonEmptyString . THE_INSTANCE ; } else if ( "string-without-line-breaks" . equals ( typeLocalName ) ) { return StringWithoutLineBreaks . THE_INSTANCE ; } else if ( "simple-color" . equals ( typeLocalName ) ) { return SimpleColor . THE_INSTANCE ; } else if ( "time-datetime" . equals ( typeLocalName ) ) { return TimeDatetime . THE_INSTANCE ; } else if ( "svg-pathdata" . equals ( typeLocalName ) ) { return new SvgPathData ( ) ; } throw new DatatypeException ( "Unknown local name for datatype: " + typeLocalName ) ; } } 