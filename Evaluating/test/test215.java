public class Uri { public static boolean isValid ( String s ) { try { new URI ( UriEncoder . encode ( s ) ) ; } catch ( URISyntaxException e ) { return false ; } return true ; } public static String escapeDisallowedChars ( String s ) { return UriEncoder . encodeAsAscii ( s ) ; } public static String resolve ( String base , String uriReference ) { if ( ! isAbsolute ( uriReference ) && base != null && isAbsolute ( base ) ) { try { URI baseURI = new URI ( UriEncoder . encode ( base ) ) ; return baseURI . resolve ( new URI ( UriEncoder . encode ( uriReference ) ) ) . toString ( ) ; } catch ( URISyntaxException e ) { } } return uriReference ; } public static boolean hasFragmentId ( String uri ) { return uri . indexOf ( '#' ) >= 0 ; } public static boolean isAbsolute ( String uri ) { int i = uri . indexOf ( ':' ) ; if ( i < 0 ) return false ; while ( -- i >= 0 ) { switch ( uri . charAt ( i ) ) { case '#' : case '/' : case '?' : return false ; } } return true ; } } 