public class AJAXMonitorPage extends Page { private Control mainControl ; private TableViewer tableViewer ; private Viewer [ ] requestData = new Viewer [ 2 ] ; private Viewer [ ] responseData = new Viewer [ 2 ] ; public AJAXMonitorPage ( ) { } public void createControl ( Composite parent ) { SashForm hSashForm = new SashForm ( parent , SWT . VERTICAL ) ; hSashForm . setLayoutData ( new GridData ( GridData . FILL_BOTH ) ) ; hSashForm . setBackgroundMode ( SWT . INHERIT_DEFAULT ) ; createRequestsTable ( hSashForm ) ; SashForm vSashForm = new SashForm ( hSashForm , SWT . HORIZONTAL ) ; vSashForm . setLayoutData ( new GridData ( GridData . FILL_BOTH ) ) ; createDetailsPart ( vSashForm , Messages . AJAXMonitorPage_Request , requestData ) ; createDetailsPart ( vSashForm , Messages . AJAXMonitorPage_Response , responseData ) ; tableViewer . addSelectionChangedListener ( new ISelectionChangedListener ( ) { public void selectionChanged ( SelectionChangedEvent event ) { ISelection selection = event . getSelection ( ) ; if ( selection instanceof IStructuredSelection ) { IXHRTransfer xhr = ( IXHRTransfer ) ( ( IStructuredSelection ) selection ) . getFirstElement ( ) ; updateDetails ( xhr ) ; } } } ) ; PreferenceUtils . registerBackgroundColorPreference ( tableViewer . getTable ( ) , "com.aptana.ide.core.ui.background.color.ajaxmonitor" ) ; PreferenceUtils . registerForegroundColorPreference ( tableViewer . getTable ( ) , "com.aptana.ide.core.ui.foreground.color.ajaxmonitor" ) ; for ( int a = 0 ; a < requestData . length ; a ++ ) { PreferenceUtils . registerBackgroundColorPreference ( requestData [ a ] . getControl ( ) , "com.aptana.ide.core.ui.background.color.ajaxmonitor.request" ) ; PreferenceUtils . registerForegroundColorPreference ( requestData [ a ] . getControl ( ) , "com.aptana.ide.core.ui.foreground.color.ajaxmonitor.request" ) ; } for ( int a = 0 ; a < responseData . length ; a ++ ) { PreferenceUtils . registerBackgroundColorPreference ( responseData [ a ] . getControl ( ) , "com.aptana.ide.core.ui.background.color.ajaxmonitor.response" ) ; PreferenceUtils . registerForegroundColorPreference ( responseData [ a ] . getControl ( ) , "com.aptana.ide.core.ui.foreground.color.ajaxmonitor.response" ) ; } PreferenceUtils . registerBackgroundColorPreference ( hSashForm , "com.aptana.ide.core.ui.background.color.ajaxmonitor.border" ) ; PreferenceUtils . registerForegroundColorPreference ( hSashForm , "com.aptana.ide.core.ui.foreground.color.ajaxmonitor.border" ) ; mainControl = hSashForm ; } private void createRequestsTable ( Composite parent ) { tableViewer = new TableViewer ( parent , SWT . SINGLE | SWT . FULL_SELECTION ) ; Table table = tableViewer . getTable ( ) ; table . setHeaderVisible ( true ) ; table . setLinesVisible ( true ) ; table . setLayoutData ( new GridData ( GridData . FILL_BOTH ) ) ; TableLayout tableLayout = new TableLayout ( ) ; table . setLayout ( tableLayout ) ; TableColumn column = new TableColumn ( table , SWT . LEFT ) ; column . setResizable ( false ) ; tableLayout . addColumnData ( new ColumnPixelData ( 20 ) ) ; column = new TableColumn ( table , SWT . LEFT ) ; column . setText ( Messages . AJAXMonitorPage_URL ) ; tableLayout . addColumnData ( new ColumnWeightData ( 60 ) ) ; column = new TableColumn ( table , SWT . LEFT ) ; column . setText ( Messages . AJAXMonitorPage_Method ) ; tableLayout . addColumnData ( new ColumnWeightData ( 10 ) ) ; column = new TableColumn ( table , SWT . LEFT ) ; column . setText ( Messages . AJAXMonitorPage_Sent ) ; tableLayout . addColumnData ( new ColumnWeightData ( 10 ) ) ; column = new TableColumn ( table , SWT . LEFT ) ; column . setText ( Messages . AJAXMonitorPage_Received ) ; tableLayout . addColumnData ( new ColumnWeightData ( 10 ) ) ; tableViewer . setContentProvider ( new XHRContentProvider ( ) ) ; tableViewer . setLabelProvider ( new XHRLabelProvider ( ) ) ; PreferenceUtils . persist ( DebugUiPlugin . getDefault ( ) . getPreferenceStore ( ) , tableViewer . getTable ( ) , "ajaxMonitorPage.requestsPart" ) ; } private void createDetailsPart ( Composite parent , String name , Viewer [ ] viewers ) { Composite container = new Composite ( parent , SWT . NONE ) ; container . setLayoutData ( new GridData ( GridData . FILL_BOTH ) ) ; GridLayout layout = new GridLayout ( 1 , false ) ; layout . marginHeight = 0 ; layout . horizontalSpacing = 0 ; layout . marginWidth /= 2 ; container . setLayout ( layout ) ; Label label = new Label ( container , SWT . NONE ) ; label . setLayoutData ( new GridData ( GridData . FILL_HORIZONTAL ) ) ; label . setText ( name ) ; CTabFolder tab = new CTabFolder ( container , SWT . BOTTOM | SWT . FLAT | SWT . BORDER ) ; tab . setLayoutData ( new GridData ( GridData . FILL_BOTH ) ) ; TableViewer viewer = new TableViewer ( tab , SWT . SINGLE | SWT . FULL_SELECTION ) ; Table table = viewer . getTable ( ) ; TableLayout tableLayout = new TableLayout ( ) ; table . setLayout ( tableLayout ) ; table . setHeaderVisible ( false ) ; table . setLinesVisible ( true ) ; TableColumn column = new TableColumn ( table , SWT . LEFT ) ; column . setText ( Messages . AJAXMonitorPage_Name ) ; tableLayout . addColumnData ( new ColumnWeightData ( 50 ) ) ; column = new TableColumn ( table , SWT . LEFT ) ; column . setText ( Messages . AJAXMonitorPage_Value ) ; tableLayout . addColumnData ( new ColumnWeightData ( 50 ) ) ; viewer . setContentProvider ( new XHRContentProvider ( ) ) ; viewer . setLabelProvider ( new XHRLabelProvider ( ) ) ; viewers [ 0 ] = viewer ; CTabItem item = new CTabItem ( tab , SWT . NONE ) ; item . setControl ( viewers [ 0 ] . getControl ( ) ) ; item . setText ( Messages . AJAXMonitorPage_Headers ) ; TextViewer textViewer = new TextViewer ( tab , SWT . READ_ONLY | SWT . V_SCROLL | SWT . H_SCROLL ) ; item = new CTabItem ( tab , SWT . NONE ) ; item . setControl ( textViewer . getControl ( ) ) ; item . setText ( Messages . AJAXMonitorPage_Body ) ; textViewer . setEditable ( false ) ; textViewer . setDocument ( new Document ( ) ) ; viewers [ 1 ] = textViewer ; PreferenceUtils . persist ( DebugUiPlugin . getDefault ( ) . getPreferenceStore ( ) , viewer . getTable ( ) , "ajaxMonitorPage.detailsPart" ) ; tab . setSelection ( item ) ; } private void updateDetails ( IXHRTransfer xhr ) { if ( xhr != null ) { requestData [ 0 ] . setInput ( xhr . getRequestHeaders ( ) ) ; ( ( IDocument ) requestData [ 1 ] . getInput ( ) ) . set ( xhr . getRequestBody ( ) ) ; responseData [ 0 ] . setInput ( xhr . getResponseHeaders ( ) ) ; ( ( IDocument ) responseData [ 1 ] . getInput ( ) ) . set ( xhr . getResponseBody ( ) ) ; } else { requestData [ 0 ] . setInput ( null ) ; ( ( IDocument ) requestData [ 1 ] . getInput ( ) ) . set ( StringUtils . EMPTY ) ; responseData [ 0 ] . setInput ( null ) ; ( ( IDocument ) responseData [ 1 ] . getInput ( ) ) . set ( StringUtils . EMPTY ) ; } } public Control getControl ( ) { return mainControl ; } public void setFocus ( ) { tableViewer . getControl ( ) . setFocus ( ) ; } public Viewer getViewer ( ) { return tableViewer ; } } 