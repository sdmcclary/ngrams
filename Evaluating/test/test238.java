public class SchemaReaderLoader implements SchemaReaderFactory { private final Service < SchemaReaderFactory > service = Service . newInstance ( SchemaReaderFactory . class ) ; public SchemaReader createSchemaReader ( String namespaceUri ) { for ( Iterator < SchemaReaderFactory > iter = service . getProviders ( ) ; iter . hasNext ( ) ; ) { SchemaReaderFactory srf = iter . next ( ) ; SchemaReader sr = srf . createSchemaReader ( namespaceUri ) ; if ( sr != null ) return sr ; } return null ; } public Option getOption ( String uri ) { for ( Iterator < SchemaReaderFactory > iter = service . getProviders ( ) ; iter . hasNext ( ) ; ) { SchemaReaderFactory srf = iter . next ( ) ; Option option = srf . getOption ( uri ) ; if ( option != null ) return option ; } return null ; } } 