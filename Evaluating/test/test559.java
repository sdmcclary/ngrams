public class Rectangle extends AbstractInt { public static final Rectangle THE_INSTANCE = new Rectangle ( ) ; private Rectangle ( ) { super ( ) ; } @ Override public void checkValid ( CharSequence literal ) throws DatatypeException { List < CharSequenceWithOffset > list = split ( literal , ',' ) ; if ( list . size ( ) != 4 ) { throw newDatatypeException ( "A rectangle must have four comma-separated integers." ) ; } for ( CharSequenceWithOffset item : list ) { checkInt ( item . getSequence ( ) , item . getOffset ( ) ) ; } if ( Integer . parseInt ( list . get ( 0 ) . getSequence ( ) . toString ( ) ) >= Integer . parseInt ( list . get ( 2 ) . getSequence ( ) . toString ( ) ) ) { throw newDatatypeException ( "The first integer must be less than the third." ) ; } if ( Integer . parseInt ( list . get ( 1 ) . getSequence ( ) . toString ( ) ) >= Integer . parseInt ( list . get ( 3 ) . getSequence ( ) . toString ( ) ) ) { throw newDatatypeException ( "The second integer must be less than the fourth." ) ; } } @ Override public String getName ( ) { return "rectangle" ; } } 