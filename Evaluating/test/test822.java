public class QuickJUnitNotificationPreferencePage extends FieldEditorPreferencePage implements IWorkbenchPreferencePage { public QuickJUnitNotificationPreferencePage ( ) { super ( FLAT ) ; setPreferenceStore ( Activator . getDefault ( ) . getPreferenceStore ( ) ) ; setDescription ( Messages . QuickJUnitNotificationPreferencePage_description ) ; noDefaultAndApplyButton ( ) ; } public void createFieldEditors ( ) { createTemplateArea ( ) ; } private void createTemplateArea ( ) { Composite comp = getFieldEditorParent ( ) ; comp . setLayout ( new GridLayout ( ) ) ; Group group = new Group ( comp , SWT . NONE ) ; group . setLayoutData ( new GridData ( SWT . FILL , SWT . FILL , true , false ) ) ; group . setLayout ( new GridLayout ( 1 , false ) ) ; group . setText ( Messages . QuickJUnitNotificationPreferencePage_template_group ) ; TemplateFieldEditor templateField = new TemplateFieldEditor ( TEMPLATE . name ( ) , "" , group ) ; addField ( templateField ) ; Composite keyDescription = new Composite ( group , SWT . NONE ) ; keyDescription . setLayout ( new GridLayout ( 1 , false ) ) ; GridDataFactory . fillDefaults ( ) . span ( 2 , 1 ) . applyTo ( keyDescription ) ; for ( TemplateKey key : TemplateKey . values ( ) ) { String text = String . format ( "%s:%s" , key . key ( ) , key . descrpition ( ) ) ; Label label = new Label ( keyDescription , SWT . NONE ) ; label . setLayoutData ( new GridData ( SWT . BEGINNING , SWT . CENTER , false , false ) ) ; label . setText ( text ) ; } } public void init ( IWorkbench workbench ) { } } 