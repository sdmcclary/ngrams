public class KeyLabelList extends AbstractDatatype { public static final KeyLabelList THE_INSTANCE = new KeyLabelList ( ) ; private KeyLabelList ( ) { super ( ) ; } @ Override public void checkValid ( CharSequence literal ) throws DatatypeException { String [ ] keylabels = literal . toString ( ) . split ( "\\s+" ) ; Arrays . sort ( keylabels ) ; for ( int i = 0 ; i < keylabels . length ; i ++ ) { String label = keylabels [ i ] ; if ( i > 0 && label . equals ( keylabels [ i - 1 ] ) ) { throw newDatatypeException ( "Duplicate key label. Each key label must be unique." ) ; } if ( label . length ( ) == 2 ) { char [ ] chars = label . toCharArray ( ) ; if ( ! ( UCharacter . isHighSurrogate ( chars [ 0 ] ) && UCharacter . isLowSurrogate ( chars [ 1 ] ) ) ) { throw newDatatypeException ( "Key label has multiple characters. Each key label must be a single character." ) ; } } if ( label . length ( ) > 2 ) { throw newDatatypeException ( "Key label has multiple characters. Each key label must be a single character." ) ; } } } @ Override public String getName ( ) { return "key label list" ; } } 