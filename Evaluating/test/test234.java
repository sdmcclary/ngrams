public class ResolverFactory { static private class CustomSAXResolver extends SAXResolver { private final XMLReaderCreator xrc ; private CustomSAXResolver ( Resolver resolver , XMLReaderCreator xrc ) { super ( resolver ) ; this . xrc = xrc ; } protected XMLReader createXMLReaderWithoutResolver ( ) throws SAXException { return xrc . createXMLReader ( ) ; } } static public SAXResolver createResolver ( PropertyMap properties ) { Resolver [ ] resolvers = new Resolver [ 4 ] ; int i = 0 ; resolvers [ 0 ] = properties . get ( ValidateProperty . RESOLVER ) ; if ( resolvers [ 0 ] != null ) i ++ ; EntityResolver entityResolver = properties . get ( ValidateProperty . ENTITY_RESOLVER ) ; URIResolver uriResolver = properties . get ( ValidateProperty . URI_RESOLVER ) ; if ( entityResolver != null ) resolvers [ i ++ ] = SAX . createResolver ( entityResolver , uriResolver == null ) ; if ( uriResolver != null ) resolvers [ i ++ ] = Transform . createResolver ( uriResolver ) ; while ( -- i > 0 ) resolvers [ i - 1 ] = new SequenceResolver ( resolvers [ i - 1 ] , resolvers [ i ] ) ; XMLReaderCreator xrc = properties . get ( ValidateProperty . XML_READER_CREATOR ) ; if ( xrc != null ) return new CustomSAXResolver ( resolvers [ 0 ] , xrc ) ; return new SAXResolver ( resolvers [ 0 ] ) ; } } 