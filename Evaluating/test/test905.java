public class SqlExecutor { private Connection connection ; private char separator = ';' ; private Logger logger ; public SqlExecutor ( Connection connection ) { this . connection = connection ; this . logger = Logger . getLogger ( getClass ( ) . getName ( ) ) ; } public void setSeparator ( char separator ) { this . separator = separator ; } public void execute ( InputStream source ) throws SQLException , IOException { execute ( new InputStreamReader ( source ) ) ; } public void execute ( File file ) throws SQLException , IOException { execute ( new FileReader ( file ) ) ; } public void execute ( String sql ) throws SQLException , IOException { execute ( new StringReader ( sql ) ) ; } public void execute ( URL source ) throws SQLException , IOException { execute ( source . openStream ( ) ) ; } public void execute ( Reader source ) throws SQLException , IOException { execute ( new PushbackReader ( source ) ) ; } private void execute ( PushbackReader reader ) throws SQLException , IOException { Statement statement = connection . createStatement ( ) ; String sql = null ; while ( ( sql = readNextStatement ( reader ) ) != null ) { try { logger . fine ( "Executing SQL: " + sql ) ; statement . execute ( sql ) ; } catch ( SQLException e ) { System . err . println ( e . getMessage ( ) ) ; } } statement . close ( ) ; } private String readNextStatement ( PushbackReader reader ) throws IOException { if ( peek ( reader ) == - 1 ) { return null ; } StringBuffer sql = new StringBuffer ( ) ; int c = - 1 ; boolean insideQuotedString = false ; while ( ( c = reader . read ( ) ) != - 1 ) { if ( c == separator && ! insideQuotedString ) { break ; } if ( c == '\'' ) { insideQuotedString = ! insideQuotedString ; } sql . append ( ( char ) c ) ; } return sql . toString ( ) . trim ( ) ; } private int peek ( PushbackReader reader ) throws IOException { int c = reader . read ( ) ; reader . unread ( c ) ; return c ; } } 