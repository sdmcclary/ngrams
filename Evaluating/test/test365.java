class ValidatorImpl implements Validator { private final Templates templates ; private final SAXTransformerFactory factory ; private final ContentHandler outputHandler ; private TransformerHandler transformerHandler ; private final Resolver resolver ; ValidatorImpl ( Templates templates , SAXTransformerFactory factory , PropertyMap properties ) { this . templates = templates ; this . factory = factory ; ErrorHandler eh = properties . get ( ValidateProperty . ERROR_HANDLER ) ; outputHandler = new OutputHandler ( eh ) ; resolver = ResolverFactory . createResolver ( properties ) . getResolver ( ) ; initTransformerHandler ( ) ; } public ContentHandler getContentHandler ( ) { return transformerHandler ; } public DTDHandler getDTDHandler ( ) { return transformerHandler ; } public void reset ( ) { initTransformerHandler ( ) ; } private void initTransformerHandler ( ) { try { transformerHandler = factory . newTransformerHandler ( templates ) ; if ( ! SchemaReaderImpl . isXsltc ( factory . getClass ( ) ) ) transformerHandler . getTransformer ( ) . setURIResolver ( Transform . createSAXURIResolver ( resolver ) ) ; } catch ( TransformerConfigurationException e ) { throw new RuntimeException ( "could not create transformer" ) ; } transformerHandler . setResult ( new SAXResult ( outputHandler ) ) ; } } 