public class QuickJUnitPlugin extends AbstractUIPlugin { private static QuickJUnitPlugin plugin ; public QuickJUnitPlugin ( ) { plugin = this ; } public void start ( BundleContext context ) throws Exception { super . start ( context ) ; } public void stop ( BundleContext context ) throws Exception { super . stop ( context ) ; plugin = null ; } public static QuickJUnitPlugin getDefault ( ) { return plugin ; } public IStatus createSystemErrorStatus ( Exception ex , Object caller ) { int severity = IStatus . ERROR ; String message ; message = ex . getMessage ( ) ; if ( message == null ) message = "" ; MultiStatus errorStatus = new MultiStatus ( getID ( ) , severity , message , ex ) ; Dictionary headers = getBundle ( ) . getHeaders ( ) ; String providerName = "" + headers . get ( Constants . BUNDLE_VENDOR ) ; message = Messages . getString ( "QuickJUnitPlugin.systemError.providerNameLabel" ) + providerName ; errorStatus . add ( createStatus ( severity , message ) ) ; String pluginName = "" + headers . get ( Constants . BUNDLE_NAME ) ; message = Messages . getString ( "QuickJUnitPlugin.systemError.pluginNameLabel" ) + pluginName ; errorStatus . add ( createStatus ( severity , message ) ) ; String pluginId = getBundle ( ) . getSymbolicName ( ) ; message = Messages . getString ( "QuickJUnitPlugin.systemError.pluginIdLabel" ) + pluginId ; errorStatus . add ( createStatus ( severity , message ) ) ; String version = "" + headers . get ( Constants . BUNDLE_VERSION ) ; message = Messages . getString ( "QuickJUnitPlugin.systemError.versionLabel" ) + version ; errorStatus . add ( createStatus ( severity , message ) ) ; Class klass = caller instanceof Class ? ( Class ) caller : caller . getClass ( ) ; message = Messages . getString ( "QuickJUnitPlugin.systemError.classLabel" ) + klass . getName ( ) ; errorStatus . add ( createStatus ( severity , message , IStatus . ERROR , ex ) ) ; return errorStatus ; } public IStatus createStatus ( int severity , String message ) { return createStatus ( severity , message , 0 , null ) ; } private IStatus createStatus ( int severity , String message , int code , Exception ex ) { return new Status ( severity , getID ( ) , code , message , ex ) ; } public void handleSystemError ( Exception ex , Object caller ) { IStatus status = createSystemErrorStatus ( ex , caller ) ; getLog ( ) . log ( status ) ; ErrorDialog . openError ( ( Shell ) null , Messages . getString ( "QuickJUnitPlugin.systemError.dialog.title" ) , Messages . getString ( "QuickJUnitPlugin.systemError.dialog.message" ) , status ) ; } public void logSystemError ( Exception ex , Object caller ) { IStatus status = createSystemErrorStatus ( ex , caller ) ; getLog ( ) . log ( status ) ; } public void logSystemErrorMessage ( String message , Object caller ) { IStatus status = createSystemErrorStatus ( new QuickJUnitException ( message ) , caller ) ; getLog ( ) . log ( status ) ; } public String getID ( ) { return getBundle ( ) . getSymbolicName ( ) ; } public ILaunchManager getLaunchManager ( ) { return DebugPlugin . getDefault ( ) . getLaunchManager ( ) ; } } 