public final class ScriptDocumentation extends Script { private enum State { BEFORE_DOCUMENTATION , SLASH , IN_COMMENT , IN_LINE_COMMENT , STAR } public static final ScriptDocumentation THE_INSTANCE = new ScriptDocumentation ( ) ; private ScriptDocumentation ( ) { super ( ) ; } @ Override public void checkValid ( CharSequence literal ) throws DatatypeException { State state = State . BEFORE_DOCUMENTATION ; for ( int i = 0 ; i < literal . length ( ) ; i ++ ) { char c = literal . charAt ( i ) ; switch ( state ) { case BEFORE_DOCUMENTATION : switch ( c ) { case ' ' : case '\t' : case '\n' : continue ; case '/' : if ( i == literal . length ( ) - 1 ) { throw newDatatypeException ( "Expected asterisk or slash but content ended with a " + "single slash instead." ) ; } state = State . SLASH ; continue ; default : throw newDatatypeException ( "Expected space, tab, newline, or slash but found “" + c + "” instead." ) ; } case SLASH : switch ( c ) { case '*' : state = State . IN_COMMENT ; continue ; case '/' : state = State . IN_LINE_COMMENT ; continue ; default : throw newDatatypeException ( "Expected asterisk or slash but found “" + c + "” instead." ) ; } case IN_COMMENT : switch ( c ) { case '*' : state = State . STAR ; continue ; default : continue ; } case STAR : switch ( c ) { case '/' : state = State . BEFORE_DOCUMENTATION ; continue ; default : continue ; } case IN_LINE_COMMENT : switch ( c ) { case '\n' : state = State . BEFORE_DOCUMENTATION ; continue ; default : continue ; } default : throw newDatatypeException ( "Content ended prematurely." ) ; } } if ( state == State . IN_LINE_COMMENT ) { throw newDatatypeException ( "Content contains a line starting with" + " the character sequence “//” but not ending" + " with a newline." ) ; } if ( state == State . IN_COMMENT || state == State . STAR ) { throw newDatatypeException ( "Content contains the character" + " sequence “/*” without a later occurrence of" + " the character sequence “*/”." ) ; } super . checkValid ( literal ) ; return ; } @ Override public String getName ( ) { return "script documentation" ; } } 