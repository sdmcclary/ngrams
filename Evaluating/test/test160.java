class SingleDataDerivType extends DataDerivType { private PatternMemo memo ; SingleDataDerivType ( ) { } PatternMemo dataDeriv ( ValidatorPatternBuilder builder , Pattern p , String str , ValidationContext vc , List < DataDerivFailure > fail ) { if ( memo == null ) memo = super . dataDeriv ( builder , p , str , vc , null ) ; return memo ; } DataDerivType copy ( ) { return new SingleDataDerivType ( ) ; } DataDerivType combine ( DataDerivType ddt ) { return ddt ; } } 