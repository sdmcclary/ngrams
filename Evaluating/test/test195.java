public class ResolverLoader { public static Resolver loadResolver ( String className , ClassLoader loader ) throws ResolverLoadException { Object obj ; try { if ( loader == null ) { loader = Thread . currentThread ( ) . getContextClassLoader ( ) ; if ( loader == null ) { loader = ClassLoader . getSystemClassLoader ( ) ; if ( loader == null ) throw new ResolverLoadException ( "no class loader" ) ; } } obj = loader . loadClass ( className ) . newInstance ( ) ; } catch ( Exception e ) { throw new ResolverLoadException ( e ) ; } if ( obj instanceof Resolver ) return ( Resolver ) obj ; Resolver entityResolver = null ; Resolver uriResolver = null ; if ( obj instanceof URIResolver ) uriResolver = Transform . createResolver ( ( URIResolver ) obj ) ; if ( obj instanceof EntityResolver ) entityResolver = SAX . createResolver ( ( EntityResolver ) obj , uriResolver == null ) ; if ( uriResolver == null ) { if ( entityResolver == null ) throw new ResolverLoadException ( className + " not an instance of javax.xml.transform.URIResolver or org.xml.sax.EntityResolver" ) ; return entityResolver ; } if ( entityResolver == null ) return uriResolver ; return new SequenceResolver ( entityResolver , uriResolver ) ; } } 