public final class Time extends AbstractDatetime { public static final Time THE_INSTANCE = new Time ( ) ; private static final Pattern THE_PATTERN = Pattern . compile ( "^([0-9]{2}):([0-9]{2})(?::([0-9]{2})(?:\\.[0-9]{1,3})?)?$" ) ; private Time ( ) { super ( ) ; } public void checkValid ( CharSequence literal ) throws DatatypeException { Matcher m = getPattern ( ) . matcher ( literal ) ; if ( m . matches ( ) ) { checkHour ( m . group ( 1 ) ) ; checkMinute ( m . group ( 2 ) ) ; String seconds = m . group ( 3 ) ; if ( seconds != null ) { checkSecond ( seconds ) ; } } else { throw newDatatypeException ( "The literal did not satisfy the format for time." ) ; } } protected final Pattern getPattern ( ) { return THE_PATTERN ; } @ Override public String getName ( ) { return "time" ; } } 