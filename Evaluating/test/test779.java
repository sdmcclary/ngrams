public class ArgsPlugin extends AbstractUIPlugin { private static ArgsPlugin plugin ; public ArgsPlugin ( ) { ArgsPlugin . plugin = this ; } public void start ( BundleContext bundleContext ) throws Exception { super . start ( bundleContext ) ; } public void stop ( BundleContext bundleContext ) throws Exception { super . stop ( bundleContext ) ; } protected void initializeImageRegistry ( ImageRegistry reg ) { reg . put ( "over_error" , imageDescriptorFromPlugin ( getID ( ) , "icon/ovr16/error.gif" ) ) ; } public static ArgsPlugin getPlugin ( ) { return plugin ; } public void logSystemError ( Exception ex , Object caller ) { IStatus status = createSystemErrorStatus ( ex , caller ) ; getLog ( ) . log ( status ) ; } public IStatus createSystemErrorStatus ( Exception ex , Object caller ) { int severity = IStatus . ERROR ; String message ; message = ex . getMessage ( ) ; if ( message == null ) message = "" ; MultiStatus errorStatus = new MultiStatus ( getID ( ) , severity , message , ex ) ; @ SuppressWarnings ( "rawtypes" ) Dictionary headers = getBundle ( ) . getHeaders ( ) ; String providerName = "" + headers . get ( Constants . BUNDLE_VENDOR ) ; message = "Provider Name:.... " + providerName ; errorStatus . add ( createStatus ( severity , message ) ) ; String pluginName = "" + headers . get ( Constants . BUNDLE_NAME ) ; message = "Plug-in Name:....... " + pluginName ; errorStatus . add ( createStatus ( severity , message ) ) ; String pluginId = getBundle ( ) . getSymbolicName ( ) ; message = "Plug-in ID:........... " + pluginId ; errorStatus . add ( createStatus ( severity , message ) ) ; String version = "" + headers . get ( Constants . BUNDLE_VERSION ) ; message = "Version:.............. " + version ; errorStatus . add ( createStatus ( severity , message ) ) ; Class < ? > klass = caller instanceof Class ? ( Class < ? > ) caller : caller . getClass ( ) ; message = "The error was detected in Class: " + klass . getName ( ) ; errorStatus . add ( createStatus ( severity , message , IStatus . ERROR , ex ) ) ; return errorStatus ; } public IStatus createStatus ( int severity , String message ) { return createStatus ( severity , message , 0 , null ) ; } private IStatus createStatus ( int severity , String message , int code , Exception ex ) { return new Status ( severity , getID ( ) , code , message , ex ) ; } public String getID ( ) { return getBundle ( ) . getSymbolicName ( ) ; } } 