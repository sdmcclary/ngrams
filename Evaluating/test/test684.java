abstract public class Transport { protected String url ; public boolean debug ; public String requestDump ; public String responseDump ; private String xmlVersionTag = "" ; public Transport ( ) { } public Transport ( String url ) { this . url = url ; } protected void parseResponse ( SoapEnvelope envelope , InputStream is ) throws XmlPullParserException , IOException { XmlPullParser xp = new KXmlParser ( ) ; xp . setFeature ( XmlPullParser . FEATURE_PROCESS_NAMESPACES , true ) ; xp . setInput ( is , null ) ; envelope . parse ( xp ) ; } protected byte [ ] createRequestData ( SoapEnvelope envelope ) throws IOException { ByteArrayOutputStream bos = new ByteArrayOutputStream ( ) ; bos . write ( xmlVersionTag . getBytes ( ) ) ; XmlSerializer xw = new KXmlSerializer ( ) ; xw . setOutput ( bos , null ) ; envelope . write ( xw ) ; xw . flush ( ) ; bos . write ( '\r' ) ; bos . write ( '\n' ) ; bos . flush ( ) ; return bos . toByteArray ( ) ; } public void setUrl ( String url ) { this . url = url ; } public void setXmlVersionTag ( String tag ) { xmlVersionTag = tag ; } public void reset ( ) { } abstract public void call ( String targetNamespace , SoapEnvelope envelope ) throws IOException , XmlPullParserException ; } 