<<<<<<< HEAD
public final class Helper { private static final Logger LOG = Logger . getLogger ( Helper . class . getName ( ) ) ; private Helper ( ) { } public static void populateDirectFeedProperties ( URL baseURL , DirectFeed aFeed , DirectOPMLFeed opmlFeed ) { aFeed . setBaseTitle ( opmlFeed . getTitle ( ) ) ; if ( opmlFeed . getHtmlURL ( ) != null ) { URL siteURL ; try { siteURL = new URL ( baseURL , opmlFeed . getHtmlURL ( ) ) ; aFeed . setSiteURL ( siteURL ) ; } catch ( MalformedURLException e ) { LOG . log ( Level . WARNING , MessageFormat . format ( Strings . error ( "invalid.url" ) , opmlFeed . getHtmlURL ( ) ) , e ) ; } } populateDefaultFeedProperties ( aFeed , opmlFeed ) ; aFeed . setCustomTitle ( opmlFeed . getCustomTitle ( ) ) ; aFeed . setCustomAuthor ( opmlFeed . getCustomCreator ( ) ) ; aFeed . setCustomDescription ( opmlFeed . getCustomDescription ( ) ) ; aFeed . setUserTags ( StringUtils . keywordsToArray ( opmlFeed . getTags ( ) ) ) ; aFeed . setTagsDescription ( opmlFeed . getTagsDescription ( ) ) ; aFeed . setTagsExtended ( opmlFeed . getTagsExtended ( ) ) ; aFeed . setDisabled ( opmlFeed . isDisabled ( ) ) ; } private static void populateDataFeedProperties ( DataFeed dfeed , DataOPMLFeed ofeed ) { Long period = ofeed . getUpdatePeriod ( ) ; if ( period != null && period > 0 ) dfeed . setUpdatePeriod ( period ) ; } private static void populateDefaultFeedProperties ( DataFeed feed , DefaultOPMLFeed opmlFeed ) { feed . setReadArticlesKeys ( opmlFeed . getReadArticlesKeys ( ) ) ; feed . setPinnedArticlesKeys ( opmlFeed . getPinnedArticlesKeys ( ) ) ; feed . setPurgeLimit ( opmlFeed . getLimit ( ) ) ; populateAbstractFeedProperties ( feed , opmlFeed ) ; } private static void populateAbstractFeedProperties ( AbstractFeed feed , DefaultOPMLFeed opmlFeed ) { feed . setRating ( opmlFeed . getRating ( ) ) ; int viewType = opmlFeed . getViewType ( ) ; if ( viewType != - 1 ) feed . setType ( FeedType . toObject ( viewType ) ) ; feed . setCustomViewModeEnabled ( opmlFeed . isViewModeEnabled ( ) ) ; int viewMode = opmlFeed . getViewMode ( ) ; if ( viewMode != - 1 ) feed . setCustomViewMode ( viewMode ) ; feed . setHandlingType ( FeedHandlingType . toObject ( opmlFeed . getHandlingType ( ) ) ) ; feed . setAscendingSorting ( opmlFeed . getAscendingSorting ( ) ) ; } public static GuidesSet createGuidesSet ( URL baseURL , OPMLGuideSet opmlGuideSet ) { OPMLGuide [ ] aGuides = opmlGuideSet . getGuides ( ) ; GuidesSet set = new GuidesSet ( ) ; for ( OPMLGuide opmlGuide : aGuides ) { set . add ( createGuide ( baseURL , opmlGuide , opmlGuideSet . getDateModified ( ) ) ) ; } return set ; } public static IGuide createGuide ( URL baseURL , OPMLGuide aOPMLGuide , Date serviceModificationTime ) { long serviceTime = serviceModificationTime == null ? - 1 : serviceModificationTime . getTime ( ) ; StandardGuide guide = new StandardGuide ( ) ; guide . setTitle ( aOPMLGuide . getTitle ( ) ) ; guide . setIconKey ( aOPMLGuide . getIcon ( ) ) ; guide . setPublishingEnabled ( aOPMLGuide . isPublishingEnabled ( ) ) ; guide . setPublishingTitle ( aOPMLGuide . getPublishingTitle ( ) ) ; guide . setPublishingTags ( aOPMLGuide . getPublishingTags ( ) ) ; guide . setPublishingPublic ( aOPMLGuide . isPublishingPublic ( ) ) ; guide . setPublishingRating ( aOPMLGuide . getPublishingRating ( ) ) ; guide . setAutoFeedsDiscovery ( aOPMLGuide . isAutoFeedsDiscovery ( ) ) ; guide . setNotificationsAllowed ( aOPMLGuide . isNotificationsAllowed ( ) ) ; guide . setMobile ( aOPMLGuide . isMobile ( ) ) ; OPMLReadingList [ ] lists = aOPMLGuide . getReadingLists ( ) ; for ( OPMLReadingList list : lists ) { try { URL url = new URL ( baseURL , list . getURL ( ) ) ; ReadingList rlist = new ReadingList ( url ) ; rlist . setTitle ( list . getTitle ( ) ) ; guide . add ( rlist ) ; List feeds = list . getFeeds ( ) ; for ( Object feed1 : feeds ) { DirectOPMLFeed opmlFeed = ( DirectOPMLFeed ) feed1 ; DirectFeed feed = createDirectFeed ( baseURL , opmlFeed ) ; if ( feed != null ) { feed . setLastUpdateTime ( serviceTime ) ; rlist . add ( feed ) ; } } } catch ( MalformedURLException e ) { LOG . log ( Level . SEVERE , MessageFormat . format ( Strings . error ( "invalid.url" ) , list . getURL ( ) ) , e ) ; } } List feeds = aOPMLGuide . getFeeds ( ) ; for ( Object ofeed : feeds ) { try { IFeed feed ; if ( ofeed instanceof DirectOPMLFeed ) { feed = createDirectFeed ( baseURL , ( DirectOPMLFeed ) ofeed ) ; } else if ( ofeed instanceof QueryOPMLFeed ) { feed = createQueryFeed ( ( QueryOPMLFeed ) ofeed ) ; } else { feed = createSearchFeed ( ( SearchOPMLFeed ) ofeed ) ; } if ( feed != null ) { feed . setLastUpdateTime ( serviceTime ) ; guide . add ( feed ) ; } } catch ( Throwable e ) { LOG . log ( Level . SEVERE , "Error unserializing a feed from OPML:" , e ) ; } } guide . setLastUpdateTime ( serviceTime ) ; return guide ; } public static DirectFeed createDirectFeed ( URL baseURL , DirectOPMLFeed ofeed ) { DirectFeed dfeed ; try { dfeed = new DirectFeed ( ) ; dfeed . setXmlURL ( new URL ( baseURL , ofeed . getXmlURL ( ) ) ) ; populateDirectFeedProperties ( baseURL , dfeed , ofeed ) ; populateDataFeedProperties ( dfeed , ofeed ) ; } catch ( MalformedURLException e ) { dfeed = null ; } return dfeed ; } public static QueryFeed createQueryFeed ( QueryOPMLFeed ofeed ) { QueryFeed feed = new QueryFeed ( ) ; populateDefaultFeedProperties ( feed , ofeed ) ; populateDataFeedProperties ( feed , ofeed ) ; feed . setBaseTitle ( ofeed . getTitle ( ) ) ; feed . setParameter ( ofeed . getQueryParam ( ) ) ; feed . setQueryType ( QueryType . getQueryType ( ofeed . getQueryType ( ) ) ) ; feed . setDedupEnabled ( ofeed . isDedupEnabled ( ) ) ; feed . setDedupFrom ( ofeed . getDedupFrom ( ) ) ; feed . setDedupTo ( ofeed . getDedupTo ( ) ) ; return feed ; } public static SearchFeed createSearchFeed ( SearchOPMLFeed aOPMLFeed ) { SearchFeed feed = new SearchFeed ( ) ; populateAbstractFeedProperties ( feed , aOPMLFeed ) ; feed . setBaseTitle ( aOPMLFeed . getTitle ( ) ) ; feed . setArticlesLimit ( aOPMLFeed . getLimit ( ) ) ; feed . setDedupProperties ( aOPMLFeed . isDedupEnabled ( ) , aOPMLFeed . getDedupFrom ( ) , aOPMLFeed . getDedupTo ( ) , false ) ; feed . setQuery ( Query . deserializeFromString ( aOPMLFeed . getQuery ( ) ) ) ; return feed ; } } 
=======
class RequiredAttributesFunction extends RequiredElementsOrAttributesFunction { public Set < Name > caseAttribute ( AttributePattern p ) { return caseNamed ( p . getNameClass ( ) ) ; } public Set < Name > caseGroup ( GroupPattern p ) { return union ( p ) ; } } 
>>>>>>> ab1fba6c6e93a4331abe98d3c4c0cdc860e899a6
